#
# Production server with UWSGI configured to run on port 8080
# and web configured to run directly on port 80
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

db:
  # Note you cannot scale if you use container_name
  container_name: reptile-db
  image: kartoza/postgis:9.6-2.4
  volumes:
    #- ./pg/postgres_data:/var/lib/postgresql
    - ./backups:/backups
    - ./sql:/sql
  environment:
    - USERNAME=docker
    - PASS=docker
  restart: unless-stopped
#  Uncomment the next line to have an access with PGAdmin using localhost and port 25432 on your computer.
#  Only for development !
#  ports:
#    - "25432:5432"

uwsgi:
  # Note you cannot scale if you use container_name
  container_name: reptile-uwsgi
  build: docker
  hostname: uwsgi
  environment:
    - DATABASE_NAME=gis
    - DATABASE_USERNAME=docker
    - DATABASE_PASSWORD=docker
    - DATABASE_HOST=db
    - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
    - VIRTUAL_HOST=reptile.kartoza.com
    - VIRTUAL_PORT=8080
  volumes:
    - ../../kbims-reptile:/home/web/django_project
    - ./static:/home/web/static:rw
    - ./media:/home/web/media:rw
    - ./reports:/home/web/reports
    - ./logs:/var/log/
  links:
    - db:db
  restart: on-failure:5
  user: root

# This is normally the main entry point for a production server
web:
  # Note you cannot scale if you use container_name
  container_name: reptile-web
  image: nginx
  hostname: nginx
  volumes:
    - ./sites-enabled:/etc/nginx/conf.d:ro
    # I dont use volumes_from as I want to use the ro modifier
    - ./static:/home/web/static:ro
    - ./media:/home/web/media:ro
    - ./logs:/var/log/nginx
  links:
    - uwsgi:uwsgi
  restart: unless-stopped

# This is the entry point for a development server.
# Run with --no-deps to run attached to the services
# from produ environment if wanted
devweb:
  # Note you cannot scale if you use container_name
  container_name: reptile-dev-web
  build: docker
  dockerfile: Dockerfile-dev
  hostname: uwsgi
  environment:
    - DATABASE_NAME=gis
    - DATABASE_USERNAME=docker
    - DATABASE_PASSWORD=docker
    - DATABASE_HOST=db
    - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
    - PYTHONPATH=/home/web/django_project
    - VIRTUAL_HOST=reptile.kartoza.com
    - VIRTUAL_PORT=8080
  volumes:
    - ../../kbims-reptile:/home/web/django_project
    - ./static:/home/web/static
    - ./media:/home/web/media
    - ./reports:/home/web/reports
    - ./logs:/var/log/
  links:
    - db:db
  ports:
    # for django test server
    - "55200:8080"
    # for ssh
    - "55300:22"
